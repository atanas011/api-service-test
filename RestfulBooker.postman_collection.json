{
	"info": {
		"_postman_id": "c071b19a-cc6c-4cbc-9363-b4ed3b414853",
		"name": "Restful Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7855185"
	},
	"item": [
		{
			"name": "Ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Environment is \\\"Test\\\"\", () => {\r",
							"    pm.expect(pm.environment.name).to.equal(\"Test\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is in 200s\", () => {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", () => {\r",
							"    pm.response.to.have.body(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{rb-url}}/ping",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains token\", () => {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\" : \"{{username}}\",\n    \"password\" : \"{{password}}\"\n}"
				},
				"url": {
					"raw": "{{rb-url}}/auth",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "List booking ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{rb-url}}/booking",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking by id",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{rb-url}}/booking/2",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(pm.environment.get(\"rb-url\") + \"/booking?firstname=\" + pm.variables.get(\"firstname\") + \"&lastname=\" + pm.variables.get(\"lastname\"),\r",
							"    (err, res) => {\r",
							"        if (err) console.log(err);\r",
							"        pm.test('Found by name', () => {\r",
							"            pm.expect(err).to.equal(null);\r",
							"            pm.expect(res.code).to.equal(200);\r",
							"            pm.expect(res.text()).to.include(pm.variables.get(\"bookingid\"));\r",
							"        });\r",
							"    }\r",
							");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"firstname\", \"Mark\");\r",
							"pm.variables.set(\"lastname\", \"Smith\");\r",
							"pm.variables.set(\"bookingid\", 5);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{rb-url}}/booking?firstname={{firstname}}&lastname={{lastname}}",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "{{firstname}}"
						},
						{
							"key": "lastname",
							"value": "{{lastname}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", () => {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"John\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2023-15-04\",\n        \"checkout\" : \"05-15-2023\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				},
				"url": {
					"raw": "{{rb-url}}/booking",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", () => {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=35ed0362c3e24cf"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"\",\n    \"lastname\" : \"\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2023-04-15\",\n        \"checkout\" : \"2023-05-15\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				},
				"url": {
					"raw": "{{rb-url}}/booking/1",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial update booking",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=7a132a2b46b0a08"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James\",\n    \"lastname\" : \"Brown\"\n}"
				},
				"url": {
					"raw": "{{rb-url}}/booking/1",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 405\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 405]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123"
					}
				],
				"url": {
					"raw": "{{rb-url}}/booking/11",
					"host": [
						"{{rb-url}}"
					],
					"path": [
						"booking",
						"11"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}